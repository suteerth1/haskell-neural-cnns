/* DO NOT EDIT: This file is automatically generated by Cabal */

/* package haskell-neural-cnns-0.1.0.0 */
#define VERSION_haskell_neural_cnns "0.1.0.0"
#define MIN_VERSION_haskell_neural_cnns(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 0)

/* package QuickCheck-2.10.0.1 */
#define VERSION_QuickCheck "2.10.0.1"
#define MIN_VERSION_QuickCheck(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  10 || \
  (major1) == 2 && (major2) == 10 && (minor) <= 0)

/* package base-4.10.0.0 */
#define VERSION_base "4.10.0.0"
#define MIN_VERSION_base(major1,major2,minor) (\
  (major1) <  4 || \
  (major1) == 4 && (major2) <  10 || \
  (major1) == 4 && (major2) == 10 && (minor) <= 0)

/* package bytestring-0.10.8.2 */
#define VERSION_bytestring "0.10.8.2"
#define MIN_VERSION_bytestring(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  10 || \
  (major1) == 0 && (major2) == 10 && (minor) <= 8)

/* package random-1.1 */
#define VERSION_random "1.1"
#define MIN_VERSION_random(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  1 || \
  (major1) == 1 && (major2) == 1 && (minor) <= 0)

/* package zlib-0.6.1.2 */
#define VERSION_zlib "0.6.1.2"
#define MIN_VERSION_zlib(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  6 || \
  (major1) == 0 && (major2) == 6 && (minor) <= 1)

/* package tasty-0.12 */
#define VERSION_tasty "0.12"
#define MIN_VERSION_tasty(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  12 || \
  (major1) == 0 && (major2) == 12 && (minor) <= 0)

/* tool alex-3.2.1 */
#define TOOL_VERSION_alex "3.2.1"
#define MIN_TOOL_VERSION_alex(major1,major2,minor) (\
  (major1) <  3 || \
  (major1) == 3 && (major2) <  2 || \
  (major1) == 3 && (major2) == 2 && (minor) <= 1)

/* tool gcc-5.4.0 */
#define TOOL_VERSION_gcc "5.4.0"
#define MIN_TOOL_VERSION_gcc(major1,major2,minor) (\
  (major1) <  5 || \
  (major1) == 5 && (major2) <  4 || \
  (major1) == 5 && (major2) == 4 && (minor) <= 0)

/* tool ghc-8.2.1 */
#define TOOL_VERSION_ghc "8.2.1"
#define MIN_TOOL_VERSION_ghc(major1,major2,minor) (\
  (major1) <  8 || \
  (major1) == 8 && (major2) <  2 || \
  (major1) == 8 && (major2) == 2 && (minor) <= 1)

/* tool ghc-pkg-8.2.1 */
#define TOOL_VERSION_ghc_pkg "8.2.1"
#define MIN_TOOL_VERSION_ghc_pkg(major1,major2,minor) (\
  (major1) <  8 || \
  (major1) == 8 && (major2) <  2 || \
  (major1) == 8 && (major2) == 2 && (minor) <= 1)

/* tool haddock-2.18.1 */
#define TOOL_VERSION_haddock "2.18.1"
#define MIN_TOOL_VERSION_haddock(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  18 || \
  (major1) == 2 && (major2) == 18 && (minor) <= 1)

/* tool happy-1.19.5 */
#define TOOL_VERSION_happy "1.19.5"
#define MIN_TOOL_VERSION_happy(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  19 || \
  (major1) == 1 && (major2) == 19 && (minor) <= 5)

/* tool hpc-0.67 */
#define TOOL_VERSION_hpc "0.67"
#define MIN_TOOL_VERSION_hpc(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  67 || \
  (major1) == 0 && (major2) == 67 && (minor) <= 0)

/* tool hsc2hs-0.68.2 */
#define TOOL_VERSION_hsc2hs "0.68.2"
#define MIN_TOOL_VERSION_hsc2hs(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  68 || \
  (major1) == 0 && (major2) == 68 && (minor) <= 2)

/* tool hscolour-1.24 */
#define TOOL_VERSION_hscolour "1.24"
#define MIN_TOOL_VERSION_hscolour(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  24 || \
  (major1) == 1 && (major2) == 24 && (minor) <= 0)

/* tool pkg-config-0.29.1 */
#define TOOL_VERSION_pkg_config "0.29.1"
#define MIN_TOOL_VERSION_pkg_config(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  29 || \
  (major1) == 0 && (major2) == 29 && (minor) <= 1)

/* tool strip-2.26 */
#define TOOL_VERSION_strip "2.26"
#define MIN_TOOL_VERSION_strip(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  26 || \
  (major1) == 2 && (major2) == 26 && (minor) <= 0)

#define CURRENT_COMPONENT_ID "haskell-neural-cnns-0.1.0.0"

#define CURRENT_PACKAGE_KEY "haskell-neural-cnns-0.1.0.0"

